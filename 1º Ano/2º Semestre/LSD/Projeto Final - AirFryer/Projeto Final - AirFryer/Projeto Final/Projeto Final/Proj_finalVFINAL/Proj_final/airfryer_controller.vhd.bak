library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity airfryer_controller is
    port (
        clk         : in std_logic;
        reset       : in std_logic;
        sw          : in std_logic_vector(7 downto 0);
        key         : in std_logic_vector(3 downto 0);
        led_red     : out std_logic_vector(2 downto 0);
        led_green   : out std_logic_vector(7 downto 0);
        hex0        : out std_logic_vector(6 downto 0);
        hex1        : out std_logic_vector(6 downto 0);
        hex2        : out std_logic_vector(6 downto 0);
        hex4        : out std_logic_vector(6 downto 0);
        hex5        : out std_logic_vector(6 downto 0)
    );
end entity;

architecture structural of airfryer_controller is
    signal current_temp: integer range 0 to 250;
    signal current_time: integer range 0 to 60;
    signal status: std_logic_vector(2 downto 0);
    signal led_food_in: std_logic;
    signal led_half: std_logic_vector(3 downto 0);
begin
    temp_ctrl: entity work.temp_control
        port map (
            clk => clk,
            reset => reset,
            run => sw(1),
            fast_cool => sw(7),
            open_oven => sw(2),
            temp_up => key(2),
            temp_down => key(3),
            current_temp => current_temp
        );

    time_ctrl: entity work.time_control
        port map (
            clk => clk,
            reset => reset,
            run => sw(1),
            time_up => key(0),
            time_down => key(1),
            current_time => current_time
        );

    state_mach: entity work.state_machine
        port map (
            clk => clk,
            reset => reset,
            run => sw(1),
            open_oven => sw(2),
            program => sw(6 downto 4),
            temp => current_temp,
            time => current_time,
            status => status,
