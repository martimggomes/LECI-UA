	.data
str:    .asciiz "Arquitetura de Computadores I"  # Define uma string estática com terminador '\0'

	.text
	.globl main

main:   
    addiu $sp, $sp, -4         # Reserva espaço na pilha (4 bytes)
    sw $ra, 0($sp)             # Salva o endereço de retorno ($ra) na pilha

    la $a0, str                # Carrega o endereço da string "str" no registrador $a0
    jal strlen                 # Chama a função strlen

    move $a0, $v0              # Move o resultado de strlen (em $v0) para $a0
    li $v0, 1                  # Configura a chamada de sistema (1 = print_int)
    syscall                    # Imprime o comprimento da string

    li $v0, 0                  # Configura retorno de sucesso (não essencial)

    lw $ra, 0($sp)             # Restaura o valor original de $ra da pilha
    addiu $sp, $sp, 4          # Libera o espaço reservado na pilha
    jr $ra                     # Retorna para a função chamadora

strlen: 
    li $t1, 0                  # Inicializa o contador de caracteres (len = 0)

while: 
    lb $t0, 0($a0)             # Carrega o próximo caractere da string em $t0
    addiu $a0, $a0, 1          # Incrementa o ponteiro da string (*s++)
    beq $t0, '\0', endw        # Verifica se o caractere atual é o terminador '\0'
    addi $t1, $t1, 1           # Incrementa o contador de caracteres (len++)
    j while                    # Volta ao início do loop

endw: 
    move $v0, $t1              # Move o valor do contador (len) para $v0
    jr $ra                     # Retorna para a função chamadora

	